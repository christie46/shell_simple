.TH man 1 "16 April 2020" "version 1.0" "simple_shell man page"
.SH NAME
.B simple_shell
- UNIX command interpreter
.SH SYNOPSIS
[command [flags] [files]]
.SH DESCRIPTION
The command interpreter simple_shell is a shell based on the sh or bash shells. It works in an interactive mode or non interactive mode,
an interactive mode means read commands from user on a terminal and A non-interactive shell is a shell that can not interact with the user.
Its most often run from a script or similar. In general starts by checking if a file descriptor refers to a terminal, then simple_shell waits
to read the line, interprets the command, if the command is valid it will be excuted, otherwise it prints and descriptive error.
Most of the commands used are located in the environment variable called PATH
.SH INITIALIZING
.PP
First of all, compile all the ".c",  files with gcc -Wextra -werror -Wall -pedantic *.c -o hsh
then you executes the hsh file, and you have your simple_shell working.

.Lp
.LP
Then it is evaluated if it is interactive or non-interactive, after this a child process is created with the fork function to execute the input command 
.Lp
Use waitpid function to wait for state changes in the child of the calling process and obtein information about of child.
.SS Built-in commands
.TP
exit [status]
Command to finished the shell program, if you specified the status it will be the last status of the program. If you do not specified it, the last
status will be the status of the last process before exit.
.TP
env
Prints the current environment.
.SH EXAMPLES INTERACTIVE MODE
.TP
Show the content of a file text.txt
.B $ /bin/cat text.txt
.TP
Show the content of the current directory
.B $ /bin/ls
.TP
Usign flags with ls command, -l shows long files and riectories in long format, -a all the directories that start with .
.B $ /bin/ls -l -a
.SH EXAMPLES NON-INTERACTIVE MODE
.TP
Show the content of the current directory
.B $ echo "/bin/ls" | ./hsh
.TP
An error example is when you type ls command with a file that does not exist, In the following the error printed is ./hsh: 1: qwerty: not found
.B $ echo "qwerty" | ./hsh
.LP
.SH EXIT STATUS
Errors that are detected by the shell, such as a syntax error, will cause the shell to exit with a non-zero exit status.
.SH BUGS
sometimes the exit command should be executed twice to works fine, or type CTRL + D more than 2 times to exit.
.SH SEE ALSO
.I sh, fork, execve, exit, fflush, free, getline, isatty, stat, strtok, wait, waitpid
.SH AUTHOR
Diego Gomez (dagomez2530@gmail.com), Ricardo Barreto (richardbarrodriguez@hotmail.com)
